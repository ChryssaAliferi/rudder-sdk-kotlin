name: Pull Request

on:
  pull_request:
    branches:
      - 'develop'
      - 'feat/*'

jobs:
  check-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title follows conventional commit format
        uses: rudderlabs/github-action-check-pr-title@v1.0.11

  build-and-test:
    runs-on: ubuntu-latest
    needs: check-pr-title
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper merging

      - name: Perform local merge with target branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin ${{ github.base_ref }}
          git merge origin/${{ github.base_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle  # This enables Gradle caching

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check Gradle build scripts dependencies are sorted
        run: ./gradlew buildEnvironment --dry-run

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Run Android Lint
        run: ./gradlew :android:lint

      - name: Find affected modules
        id: affected-modules
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          if echo "$CHANGED_FILES" | grep -q "^core/"; then
            echo "core=true" >> $GITHUB_OUTPUT
          else
            echo "core=false" >> $GITHUB_OUTPUT
          fi
          
          if echo "$CHANGED_FILES" | grep -q "^android/"; then
            echo "android=true" >> $GITHUB_OUTPUT
          else
            echo "android=false" >> $GITHUB_OUTPUT
          fi
          
          echo "Changes detected:"
          echo "Core module affected: ${{ steps.affected-modules.outputs.core }}"
          echo "Android module affected: ${{ steps.affected-modules.outputs.android }}"

      - name: Run Core module tests
        if: steps.affected-modules.outputs.core == 'true'
        run: ./gradlew :core:test

      - name: Run Android module tests
        if: steps.affected-modules.outputs.android == 'true'
        run: ./gradlew :android:test

      - name: Build Core SDK
        run: ./gradlew :core:assemble

      - name: Build Android SDK
        run: ./gradlew :android:assemble

      - name: Deploy SDKs to GitHub
        run: |
          mkdir -p sdk-artifacts
          cp core/build/libs/*.jar sdk-artifacts/ || true
          cp android/build/outputs/aar/*.aar sdk-artifacts/ || true

      - name: Upload SDK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdk-artifacts
          path: sdk-artifacts/

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/
            **/build/reports/detekt/
            **/build/reports/lint-results*.html

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: |
            Pull Request CI ${{ job.status == 'success' && 'passed ✅' || 'failed ❌' }}
            Repository: ${{ github.repository }}
            PR: ${{ github.event.pull_request.title }} (#${{ github.event.pull_request.number }})
            By: ${{ github.actor }}
            Link: ${{ github.event.pull_request.html_url }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
